#!/bin/bash

#############################################################################
# Version 0.1.0-UNSTABLE (28-03-2020)
#############################################################################

#############################################################################
# Copyright 2016-2020 Nozel/Sebas Veeke. Licenced under a Creative Commons
# Attribution-NonCommercial-ShareAlike 4.0 International License.
#
# See https://creativecommons.org/licenses/by-nc-sa/4.0/
#
# Contact:
# > e-mail      mail@nozel.org
# > GitHub      nozel-org
#############################################################################

#############################################################################
# VARIABLES
#############################################################################

# remindbot version
REMINDBOT_VERSION='0.1.0'

# check whether remindbot.conf is available and source it
if [ -f /etc/remindbot/remindbot.conf ]; then
    source /etc/remindbot/remindbot.conf
    # check whether method telegram has been configured
    if [ "${TELEGRAM_TOKEN}" == 'telegram_token_here' ]; then
        METHOD_TELEGRAM='disabled'
    fi
else
    # otherwise exit
    echo 'remindbot: cannot find /etc/remindbot/remindbot.conf'
    echo "Install the configuration file to use remindbot."
    exit 1
fi

# empty variables
TELEGRAM_MESSAGE=''

#############################################################################
# ARGUMENTS
#############################################################################

# save amount of arguments for validity check
ARGUMENTS="${#}"

# populate validation variables with zero
ARGUMENT_OPTION='0'
ARGUMENT_FEATURE='0'
ARGUMENT_METHOD='0'

# enable help, version and a cli option
while test -n "$1"; do
    case "$1" in
        # options
        --version|-version|version|--v|-v)
            ARGUMENT_VERSION='1'
            ARGUMENT_OPTION='1'
            shift
            ;;

        --help|-help|help|--h|-h)
            ARGUMENT_HELP='1'
            ARGUMENT_OPTION='1'
            shift
            ;;

        --cron)
            ARGUMENT_CRON='1'
            ARGUMENT_OPTION='1'
            shift
            ;;

        --retrieve|retrieve)
            ARGUMENT_RETRIEVE='1'
            ARGUMENT_OPTION='1'
            shift
            ;;

        # features
        --overview|overview)
            ARGUMENT_OVERVIEW='1'
            ARGUMENT_FEATURE='1'
            shift
            ;;

        --remind|remind)
            ARGUMENT_REMIND='1'
            ARGUMENT_FEATURE='1'
            shift
            ;;

        # methods
        --cli|cli)
            ARGUMENT_CLI='1'
            ARGUMENT_METHOD='1'
            shift
            ;;

        --telegram|telegram)
            ARGUMENT_TELEGRAM='1'
            ARGUMENT_METHOD='1'
            shift
            ;;

        # other
        *)
            ARGUMENT_NONE='1'
            shift
            ;;
    esac
done

#############################################################################
# MANAGEMENT FUNCTIONS
#############################################################################

remindbot_version() {
    echo "Remindbot ${REMINDBOT_VERSION}"
    echo "Copyright (C) 2016-2020 Nozel."
    echo "License CC Attribution-NonCommercial-ShareAlike 4.0 Int."
    echo
    echo "Written by Sebas Veeke"
}

remindbot_help() {
    echo "Usage:"
    echo " remindbot [feature]... [method]..."
    echo " remindbot [option]..."
    echo
    echo "Features:"
    echo " --overview        Show reminders overview"
    echo " --remind          Show reminders"
    echo
    echo "Methods:"
    echo " --cli             Output [feature] to command line"
    echo " --telegram        Output [feature] to Telegram bot"
    echo
    echo "Options:"
    echo " --retrieve        Retrieve reminders from link"
    echo " --cron            Effectuate cron changes from remindbot config"
    echo " --validate        Check validity of remindbot.conf"
    echo " --help            Display this help and exit"
    echo " --version         Display version information and exit"
}

remindbot_cron() {
    # function requirements
    requirement_root
    remindbot_validate

    # return error when config file isn't installed on the system
    if [ "${REMINDBOT_CONFIG}" == 'disabled' ]; then
        error_not_available
    fi

    echo '*** UPDATING CRONJOBS ***'
    # remove cronjobs so automated tasks can also be deactivated
    echo '[-] Removing old remindbot cronjobs...'
    rm -f /etc/cron.d/remindbot_*
    # update cronjobs automated tasks
    if [ "${OVERVIEW_TELEGRAM}" == 'yes' ]; then
        echo '[+] Updating cronjob for automated reminder overviews on Telegram...'
        echo -e "# This cronjob activates a automated reminder overview on Telegram on the chosen schedule\n${OVERVIEW_CRON} root /usr/bin/remindbot --overview --telegram" > /etc/cron.d/remindbot_overview_telegram
    fi
    if [ "${REMINDER_TELEGRAM}" == 'yes' ]; then
        echo '[+] Updating cronjob for automated reminders on Telegram...'
        echo -e "# This cronjob activates automated reminders on Telegram on the chosen schedule\n${REMINDER_CRON}_CRON} root /usr/bin/remindbot --metrics --telegram" > /etc/cron.d/remindbot_remind_telegram
    fi
    if [ "${RETRIEVE_REMINDERS}" == 'yes' ]; then
        echo '[+] Updating cronjob for automated retrieval of reminders...'
        echo -e "# This cronjob activates automated retrieval of reminders on the chosen schedule\n${RETRIEVE_CRON}_CRON} root /usr/bin/remindbot --retrieve" > /etc/cron.d/remindbot_retrieve_reminders
    fi

    # give user feedback when all automated tasks are disabled
    if [ "${OVERVIEW_TELEGRAM}" != 'yes' ] && \
    [ "${REMINDER_TELEGRAM}" != 'yes' ] && \
    [ "${RETRIEVE_REMINDERS}" != 'yes' ]; then
        echo '[i] All automated tasks are disabled, no cronjobs to update...'
        exit 0
    fi

    # restart cron to really effectuate the new cronjobs
    echo '[+] Restart the cron service to effectuate the changes...'
    exit 0
}

remindbot_retrieve() {
    wget --quiet ${RETRIEVE_URL} -O /etc/remindbot/reminders.list
}

#############################################################################
# GATHER FUNCTIONS
#############################################################################

gather_eol() {
    # modify basic distro information to upper case
    EOL_OS="$(echo ${DISTRO_ID}${DISTRO_VERSION} | tr '[:lower:]' '[:upper:]')"
    EOL_OS_NAME="EOL_${EOL_OS}"

    # source database with eol data
    source <(curl --silent https://raw.githubusercontent.com/nozel-org/serverbot/${SERVERBOT_BRANCH}/resources/eol.list | tr -d '.')

    # calculate epoch difference between current date and eol date
    EPOCH_EOL="$(date --date=$(echo "${!EOL_OS_NAME}") +%s)"
    EPOCH_CURRENT="$(date +%s)"
    EPOCH_DIFFERENCE="$(( ${EPOCH_EOL} - ${EPOCH_CURRENT} ))"
}

gather_input_data() {
    # copy reminders.list to temporary file and strip it of all comments and empty lines
    INPUT_DATA="$(mktemp)-remindbot"
    cat /etc/remindbot/reminders.list | sed '/^#/ d' | sed '/^$/d' > ${INPUT_DATA}
}

gather_overview() {
    gather_input_data
    OVERVIEW_OUTPUT="$(mktemp)-remindbot"

    # category 'proeftijd'
    echo '1) PROEFIJD' >> ${OVERVIEW_OUTPUT}
    echo -e "In dienst\tEinddatum\tMedewerker" >> ${OVERVIEW_OUTPUT}
    while IFS= read -r line; do
        CATEGORY="$(echo ${line} | awk '{print $1}')"
        if [ "${CATEGORY}" == 'PROEFTIJD' ]; then
            DATE_EMPLOYMENT="$(date --date=$(echo ${line} | awk '{print $2}') +%d-%m-%Y)"
            DATE_CONTRACT="$(date --date=$(echo ${line} | awk '{print $3}') +%d-%m-%Y)"
            NAME="$(echo ${line} | awk '{print $5}')"
            echo -e "${DATE_EMPLOYMENT}\t${DATE_CONTRACT}\t${NAME}" >> ${OVERVIEW_OUTPUT}
        fi
    done < "${INPUT_DATA}"

    # category 'tijdelijk8'
    echo >> ${OVERVIEW_OUTPUT}
    echo '2) TIJDELIJK 8 MAANDEN' >> ${OVERVIEW_OUTPUT}
    echo -e "In dienst\tEinddatum\tMedewerker" >> ${OVERVIEW_OUTPUT}
    while IFS= read -r line; do
        CATEGORY="$(echo ${line} | awk '{print $1}')"
        if [ "${CATEGORY}" == 'TIJDELIJK8' ]; then
            DATE_EMPLOYMENT="$(date --date=$(echo ${line} | awk '{print $2}') +%d-%m-%Y)"
            DATE_CONTRACT="$(date --date=$(echo ${line} | awk '{print $3}') +%d-%m-%Y)"
            NAME="$(echo ${line} | awk '{print $5}')"
            echo -e "${DATE_EMPLOYMENT}\t${DATE_CONTRACT}\t${NAME}" >> ${OVERVIEW_OUTPUT}
        fi
    done < "${INPUT_DATA}"

    # category 'tijdelijk16'
    echo >> ${OVERVIEW_OUTPUT}
    echo '3) TIJDELIJK 16 MAANDEN' >> ${OVERVIEW_OUTPUT}
    echo -e "In dienst\tEinddatum\tMedewerker" >> ${OVERVIEW_OUTPUT}
    while IFS= read -r line; do
        CATEGORY="$(echo ${line} | awk '{print $1}')"
        if [ "${CATEGORY}" == 'TIJDELIJK16' ]; then
            DATE_EMPLOYMENT="$(date --date=$(echo ${line} | awk '{print $2}') +%d-%m-%Y)"
            DATE_CONTRACT="$(date --date=$(echo ${line} | awk '{print $3}') +%d-%m-%Y)"
            NAME="$(echo ${line} | awk '{print $5}')"
            echo -e "${DATE_EMPLOYMENT}\t${DATE_CONTRACT}\t${NAME}" >> ${OVERVIEW_OUTPUT}
        fi
    done < "${INPUT_DATA}"

    # category 'onbepaald'
    echo >> ${OVERVIEW_OUTPUT}
    echo '4) ONBEPAALD' >> ${OVERVIEW_OUTPUT}
    echo -e "In dienst\tEinddatum\tMedewerker" >> ${OVERVIEW_OUTPUT}
    while IFS= read -r line; do
        CATEGORY="$(echo ${line} | awk '{print $1}')"
        if [ "${CATEGORY}" == 'ONBEPAALD' ]; then
            DATE_EMPLOYMENT="$(date --date=$(echo ${line} | awk '{print $2}') +%d-%m-%Y)"
            NAME="$(echo ${line} | awk '{print $3}')"
            echo -e "${DATE_EMPLOYMENT}\tn.v.t.\t\t${NAME}" >> ${OVERVIEW_OUTPUT}
        fi
    done < "${INPUT_DATA}"
}

#############################################################################
# FEATURE FUNCTIONS
#############################################################################

feature_overview_cli() {
    gather_overview

    # output overview and remove temporary files
    cat ${OVERVIEW_OUTPUT}    
    rm ${INPUT_DATA}
    rm ${OVERVIEW_OUTPUT}

    # exit when done
    exit 0
}

feature_overview_telegram() {
    gather_overview

    # output overview and remove temporary files
    TELEGRAM_MESSAGE="<code>$(cat ${OVERVIEW_OUTPUT})</code>"
    method_telegram    
    rm ${INPUT_DATA}
    rm ${OVERVIEW_OUTPUT}

    # exit when done
    exit 0
}

feature_remind_cli() {
    gather_input_data

    # remind 5 days before the end of the probation period
    while IFS= read -r line; do
        CATEGORY="$(echo ${line} | awk '{print $1}')"
        if [ "${CATEGORY}" == 'PROEFTIJD' ]; then
            CURRENT_DATE="$(date +"%y%m%d")"
            DATE_EMPLOYMENT="$(echo ${line} | awk '{print $2}')"
            DATE_EMPLOYMENT_PLUS_23="$(date -d "${DATE_EMPLOYMENT} +23 days" +"%y%m%d")"
            NAME="$(echo ${line} | awk '{print $5}')"
            if [ "${CURRENT_DATE}" -eq "${DATE_EMPLOYMENT_PLUS_23}" ]; then
                TELEGRAM_MESSAGE="Herinnering: de proeftijd van ${NAME} loopt over 5 dagen (op xxx) af."
                method_telegram
            fi
        fi
    done < "${INPUT_DATA}"

    # remind 1,5 month before the end of temporary contracts that can be renewed once more
    while IFS= read -r line; do
        CATEGORY="$(echo ${line} | awk '{print $1}')"
        if [ "${CATEGORY}" == 'TIJDELIJK8' ] || [ "${CATEGORY}" == 'TIJDELIJK16' ]; then
            LAST_TEMP_CONTRACT="$(echo ${line} | awk '{print $4}')"
            if [ "${LAST_TEMP_CONTRACT}" == 'NO' ] || [ "${LAST_TEMP_CONTRACT}" == 'no' ]; then
                CURRENT_DATE="$(date +"%y%m%d")"
                DATE_CONTRACT="$(echo ${line} | awk '{print $3}')"
                DATE_CONTRACT_MINUS_45="$(date -d "${DATE_CONTRACT} -45 days" +"%y%m%d")"
                DATE_CONTRACT_PRETTY="$(date --date=$(echo ${line} | awk '{print $3}') +%d-%m-%Y)"
                NAME="$(echo ${line} | awk '{print $5}')"
                if [ "${CURRENT_DATE}" -eq "${DATE_CONTRACT_MINUS_45}" ]; then
                    TELEGRAM_MESSAGE="Herinnering: de tijdelijke arbeidsovereenkomst van ${NAME} verloopt over 1,5 maanden (op ${DATE_CONTRACT_PRETTY}). Zet de eventuele verlenging in werking."
                    method_telegram
                fi
            fi
        fi
    done < "${INPUT_DATA}"

    # remind 3 month before the end of temporary contracts that can not be renewed once more
    while IFS= read -r line; do
        CATEGORY="$(echo ${line} | awk '{print $1}')"
        if [ "${CATEGORY}" == 'TIJDELIJK8' ] || [ "${CATEGORY}" == 'TIJDELIJK16' ]; then
            LAST_TEMP_CONTRACT="$(echo ${line} | awk '{print $4}')"
            if [ "${LAST_TEMP_CONTRACT}" == 'YES' ] || [ "${LAST_TEMP_CONTRACT}" == 'yes' ]; then
                CURRENT_DATE="$(date +"%y%m%d")"
                DATE_CONTRACT="$(echo ${line} | awk '{print $3}')"
                DATE_CONTRACT_MINUS_90="$(date -d "${DATE_CONTRACT} -90 days" +"%y%m%d")"
                DATE_CONTRACT_PRETTY="$(date --date=$(echo ${line} | awk '{print $3}') +%d-%m-%Y)"
                NAME="$(echo ${line} | awk '{print $5}')"
                if [ "${CURRENT_DATE}" -eq "${DATE_CONTRACT_MINUS_45}" ]; then
                    TELEGRAM_MESSAGE="Herinnering: de tijdelijke arbeidsovereenkomst van ${NAME} verloopt over 3 maanden (op ${DATE_CONTRACT_PRETTY}). Het is tijd om vier gesprekken voor transitie van tijdelijk naar vast in te plannen."
                    method_telegram
                fi
            fi
        fi
    done < "${INPUT_DATA}"

    # remind about performance reviews 1 month before every 6 months since employment
    while IFS= read -r line; do
        CATEGORY="$(echo ${line} | awk '{print $1}')"
        if [ "${CATEGORY}" == 'TIJDELIJK8' ] || [ "${CATEGORY}" == 'TIJDELIJK16' ] || [ "${CATEGORY}" == 'ONBEPAALD' ]; then
            CURRENT_DATE="$(date +"%y%m%d")"
            DATE_EMPLOYMENT="$(echo ${line} | awk '{print $2}')"
            NAME="$(echo ${line} | awk '{print $5}')"
            # remind after 5-149 months
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +5 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +11 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +17 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +23 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +29 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +35 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +41 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +47 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +53 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +59 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +65 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +71 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +77 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +83 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +89 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +95 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +101 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +107 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +113 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +119 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +125 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +131 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +137 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +143 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
            if [ "${CURRENT_DATE}" -eq "$(date -d "${DATE_EMPLOYMENT} +149 months" +"%y%m%d")" ]; then
                TELEGRAM_MESSAGE="Herinnering: het functioneringsgesprek met ${NAME} moet binnen nu en een maand plaatsvinden."
                method_telegram
            fi
        fi
    done < "${INPUT_DATA}"
}

#############################################################################
# METHOD FUNCTIONS
#############################################################################

method_telegram() {
    # return error when telegram is unavailable
    if [ "${METHOD_TELEGRAM}" == 'disabled' ]; then
        error_not_available
    fi

    # create payload for Telegram
    TELEGRAM_PAYLOAD="chat_id=${TELEGRAM_CHAT}&text=${TELEGRAM_MESSAGE}&parse_mode=HTML&disable_web_page_preview=true"

    # sent payload to Telegram API and exit
    curl --silent --max-time 10 --retry 5 --retry-delay 2 --retry-max-time 10 -d "${TELEGRAM_PAYLOAD}" "${TELEGRAM_URL}" > /dev/null 2>&1 &
}

#############################################################################
# MAIN FUNCTION
#############################################################################

remindbot_main() {
    # check argument validity
    #requirement_argument_validity

    # call relevant functions based on arguments
    if [ "${ARGUMENT_VERSION}" == '1' ]; then
        remindbot_version
    elif [ "${ARGUMENT_HELP}" == '1' ]; then
        remindbot_help
    elif [ "${ARGUMENT_CRON}" == '1' ]; then
        remindbot_cron
    elif [ "${ARGUMENT_RETRIEVE}" == '1' ]; then
        remindbot_retrieve
    elif [ "${ARGUMENT_OVERVIEW}" == '1' ] && [ "${ARGUMENT_CLI}" == '1' ]; then
        feature_overview_cli
    elif [ "${ARGUMENT_OVERVIEW}" == '1' ] && [ "${ARGUMENT_TELEGRAM}" == '1' ]; then
        feature_overview_telegram
    elif [ "${ARGUMENT_REMIND}" == '1' ] && [ "${ARGUMENT_CLI}" == '1' ]; then
        feature_remind_cli
    elif [ "${ARGUMENT_REMIND}" == '1' ] && [ "${ARGUMENT_TELEGRAM}" == '1' ]; then
        feature_remind_telegram
    elif [ "${ARGUMENT_NONE}" == '1' ]; then
        error_invalid_option
    fi
}

#############################################################################
# CALL MAIN FUNCTION
#############################################################################

remindbot_main
